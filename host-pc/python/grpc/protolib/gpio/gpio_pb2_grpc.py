# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protolib.gpio.gpio_pb2 as gpio__pb2


class GPIOStub(object):
    """/////////////////////////////////////////////////
    Define RPC Service              //         
    /////////////////////////////////////////////////
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TurnOnPYNQSDN1IO = channel.unary_unary(
                '/gpio.GPIO/TurnOnPYNQSDN1IO',
                request_serializer=gpio__pb2.TurnOnPYNQSDN1IOPacket.SerializeToString,
                response_deserializer=gpio__pb2.TurnOnPYNQSDN1IOResponse.FromString,
                )
        self.TurnOffPYNQSDN1IO = channel.unary_unary(
                '/gpio.GPIO/TurnOffPYNQSDN1IO',
                request_serializer=gpio__pb2.TurnOffPYNQSDN1IOPacket.SerializeToString,
                response_deserializer=gpio__pb2.TurnOffPYNQSDN1IOResponse.FromString,
                )
        self.TurnOnPYNQSDN2IO = channel.unary_unary(
                '/gpio.GPIO/TurnOnPYNQSDN2IO',
                request_serializer=gpio__pb2.TurnOnPYNQSDN2IOPacket.SerializeToString,
                response_deserializer=gpio__pb2.TurnOnPYNQSDN2IOResponse.FromString,
                )
        self.TurnOffPYNQSDN2IO = channel.unary_unary(
                '/gpio.GPIO/TurnOffPYNQSDN2IO',
                request_serializer=gpio__pb2.TurnOffPYNQSDN2IOPacket.SerializeToString,
                response_deserializer=gpio__pb2.TurnOffPYNQSDN2IOResponse.FromString,
                )
        self.TurnOnPYNQSDN3IO = channel.unary_unary(
                '/gpio.GPIO/TurnOnPYNQSDN3IO',
                request_serializer=gpio__pb2.TurnOnPYNQSDN3IOPacket.SerializeToString,
                response_deserializer=gpio__pb2.TurnOnPYNQSDN3IOResponse.FromString,
                )
        self.TurnOffPYNQSDN3IO = channel.unary_unary(
                '/gpio.GPIO/TurnOffPYNQSDN3IO',
                request_serializer=gpio__pb2.TurnOffPYNQSDN3IOPacket.SerializeToString,
                response_deserializer=gpio__pb2.TurnOffPYNQSDN3IOResponse.FromString,
                )
        self.ResetADCStart = channel.unary_unary(
                '/gpio.GPIO/ResetADCStart',
                request_serializer=gpio__pb2.ResetADCStartPacket.SerializeToString,
                response_deserializer=gpio__pb2.ResetADCStartResponse.FromString,
                )
        self.StartADC = channel.unary_unary(
                '/gpio.GPIO/StartADC',
                request_serializer=gpio__pb2.StartADCPacket.SerializeToString,
                response_deserializer=gpio__pb2.StartADCResponse.FromString,
                )


class GPIOServicer(object):
    """/////////////////////////////////////////////////
    Define RPC Service              //         
    /////////////////////////////////////////////////
    """

    def TurnOnPYNQSDN1IO(self, request, context):
        """Turn On PYNQ SDN 1 I/O
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnOffPYNQSDN1IO(self, request, context):
        """Turn Off PYNQ SDN 1 I/O
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnOnPYNQSDN2IO(self, request, context):
        """Turn On PYNQ SDN 2 I/O
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnOffPYNQSDN2IO(self, request, context):
        """Turn Off PYNQ SDN 2 I/O
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnOnPYNQSDN3IO(self, request, context):
        """Turn On PYNQ SDN 3 I/O
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TurnOffPYNQSDN3IO(self, request, context):
        """Turn Off PYNQ SDN 3 I/O
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetADCStart(self, request, context):
        """Reset ADC Start
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartADC(self, request, context):
        """Start ADC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GPIOServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TurnOnPYNQSDN1IO': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnOnPYNQSDN1IO,
                    request_deserializer=gpio__pb2.TurnOnPYNQSDN1IOPacket.FromString,
                    response_serializer=gpio__pb2.TurnOnPYNQSDN1IOResponse.SerializeToString,
            ),
            'TurnOffPYNQSDN1IO': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnOffPYNQSDN1IO,
                    request_deserializer=gpio__pb2.TurnOffPYNQSDN1IOPacket.FromString,
                    response_serializer=gpio__pb2.TurnOffPYNQSDN1IOResponse.SerializeToString,
            ),
            'TurnOnPYNQSDN2IO': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnOnPYNQSDN2IO,
                    request_deserializer=gpio__pb2.TurnOnPYNQSDN2IOPacket.FromString,
                    response_serializer=gpio__pb2.TurnOnPYNQSDN2IOResponse.SerializeToString,
            ),
            'TurnOffPYNQSDN2IO': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnOffPYNQSDN2IO,
                    request_deserializer=gpio__pb2.TurnOffPYNQSDN2IOPacket.FromString,
                    response_serializer=gpio__pb2.TurnOffPYNQSDN2IOResponse.SerializeToString,
            ),
            'TurnOnPYNQSDN3IO': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnOnPYNQSDN3IO,
                    request_deserializer=gpio__pb2.TurnOnPYNQSDN3IOPacket.FromString,
                    response_serializer=gpio__pb2.TurnOnPYNQSDN3IOResponse.SerializeToString,
            ),
            'TurnOffPYNQSDN3IO': grpc.unary_unary_rpc_method_handler(
                    servicer.TurnOffPYNQSDN3IO,
                    request_deserializer=gpio__pb2.TurnOffPYNQSDN3IOPacket.FromString,
                    response_serializer=gpio__pb2.TurnOffPYNQSDN3IOResponse.SerializeToString,
            ),
            'ResetADCStart': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetADCStart,
                    request_deserializer=gpio__pb2.ResetADCStartPacket.FromString,
                    response_serializer=gpio__pb2.ResetADCStartResponse.SerializeToString,
            ),
            'StartADC': grpc.unary_unary_rpc_method_handler(
                    servicer.StartADC,
                    request_deserializer=gpio__pb2.StartADCPacket.FromString,
                    response_serializer=gpio__pb2.StartADCResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gpio.GPIO', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GPIO(object):
    """/////////////////////////////////////////////////
    Define RPC Service              //         
    /////////////////////////////////////////////////
    """

    @staticmethod
    def TurnOnPYNQSDN1IO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/TurnOnPYNQSDN1IO',
            gpio__pb2.TurnOnPYNQSDN1IOPacket.SerializeToString,
            gpio__pb2.TurnOnPYNQSDN1IOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TurnOffPYNQSDN1IO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/TurnOffPYNQSDN1IO',
            gpio__pb2.TurnOffPYNQSDN1IOPacket.SerializeToString,
            gpio__pb2.TurnOffPYNQSDN1IOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TurnOnPYNQSDN2IO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/TurnOnPYNQSDN2IO',
            gpio__pb2.TurnOnPYNQSDN2IOPacket.SerializeToString,
            gpio__pb2.TurnOnPYNQSDN2IOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TurnOffPYNQSDN2IO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/TurnOffPYNQSDN2IO',
            gpio__pb2.TurnOffPYNQSDN2IOPacket.SerializeToString,
            gpio__pb2.TurnOffPYNQSDN2IOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TurnOnPYNQSDN3IO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/TurnOnPYNQSDN3IO',
            gpio__pb2.TurnOnPYNQSDN3IOPacket.SerializeToString,
            gpio__pb2.TurnOnPYNQSDN3IOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TurnOffPYNQSDN3IO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/TurnOffPYNQSDN3IO',
            gpio__pb2.TurnOffPYNQSDN3IOPacket.SerializeToString,
            gpio__pb2.TurnOffPYNQSDN3IOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetADCStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/ResetADCStart',
            gpio__pb2.ResetADCStartPacket.SerializeToString,
            gpio__pb2.ResetADCStartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartADC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gpio.GPIO/StartADC',
            gpio__pb2.StartADCPacket.SerializeToString,
            gpio__pb2.StartADCResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
